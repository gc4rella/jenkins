;This scenario checks if the behaviour of openbaton is correct if a script in the start lifecycle event fails.

[it]
;set the maximum time (in seconds) of the Integration test. e.g. 10 min = 600 seconds
max-integration-test-time = 300
;set the maximum number of concurrent successors (max number of active child threads)
max-concurrent-successors = 10

;vimInstance-create
[it/vim-c-1]
class-name = VimInstanceCreate
name-file = real-vim.json
successor-remover = vim-d-1

[it/vim-c-1/vim-d-1]
class-name = VimInstanceDelete

;nsd-create
[it/vim-c-1/nsd-c-1]
class-name = NetworkServiceDescriptorCreate
num_instances = 1
successor-remover = nsd-d-1
name-file = NetworkServiceDescriptor_fail_in_start.json

;nsd-delete
[it/vim-c-1/nsd-c-1/nsd-d-1]
class-name = NetworkServiceDescriptorDelete

;nsr-create
[it/vim-c-1/nsd-c-1/nsr-c-1]
class-name = NetworkServiceRecordCreate
num_instances = 1





;pause for three seconds to make sure that the NSR has all it's VNFR
[it/vim-c-1/nsd-c-1/nsr-c-1/p-1]
class-name = Pause
duration = 3

;get the latest version of the NSR from the NFVO
[it/vim-c-1/nsd-c-1/nsr-c-1/p-1/nsr-g-1]
class-name = NetworkServiceRecordGetLatest

;nsr-wait for creation
[it/vim-c-1/nsd-c-1/nsr-c-1/p-1/nsr-g-1/vnf-w-1]
class-name = VirtualNetworkFunctionRecordWait
;the default timeout is 5 seconds
timeout = 600
action = ERROR
vnf-type = client

;get the latest version of the NSR from the NFVO
[it/vim-c-1/nsd-c-1/nsr-c-1/p-1/nsr-g-1/vnf-w-1/nsr-g-2]
class-name = NetworkServiceRecordGetLatest

;check status
[it/vim-c-1/nsd-c-1/nsr-c-1/p-1/nsr-g-1/vnf-w-1/nsr-g-2/st-t-1]
class-name = VNFRStatusTester
;the default timeout is 5 seconds
vnf-type = client
status = ERROR

;nsr-wait for deletion
[it/vim-c-1/nsd-c-1/nsr-c-1/p-1/nsr-g-1/vnf-w-1/nsr-g-2/st-t-1/nsr-w-1]
class-name = NetworkServiceRecordWait
;the default timeout is 5 seconds
timeout = 360
action = RELEASE_RESOURCES_FINISH

;nsr-delete
[it/vim-c-1/nsd-c-1/nsr-c-1/p-1/nsr-g-1/vnf-w-1/nsr-g-2/st-t-1/nsr-d-1]
class-name = NetworkServiceRecordDelete